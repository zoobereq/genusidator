#!/usr/bin/env python
"""A module applying semantic, morphological, and phonological criteria to explain the feminine gender assignment"""

# import syllables
from german_nouns.lookup import Nouns
from googletrans import Translator

from hypernyms import taxonomy
from rules import fem_category_dict, fem_classes, fem_suffixes

de_nouns = Nouns()
translator = Translator()


def fem_rule1(hypernyms: list) -> set:
    """returns an intersection of the semantic categories associated with the feminine noun class and the set of hypernyms generated by the input noun.
    To simplyfy, the initially generated classes are expressed in terms of general semantic categories."""
    categories = []
    general_categories = []
    for category in hypernyms:
        if category in fem_classes:
            categories.append(category)
    for category in categories:
        for key, value in fem_category_dict.items():
            if category in value:
                general_categories.append(key)
    return set(general_categories)


def fem_rule2(token: str) -> str:
    """checks the input noun for the suffixes associated with the masculine noun class"""
    suffixes = []
    for suffix in fem_suffixes:
        if token.endswith(suffix):
            suffixes.append("-" + suffix)
    return max(suffixes, key=len)


def fem_evaluate(lemmatized: str, hypernyms: list) -> None:
    """the fucntion takes the noun and a set of hypernyms generated over all nominal synsets and determines if any of the hypernyms are affiliated with the feminine noun class.  It then performs simple morphological analysis by checking if the noun contains the prefixes and suffixes associated with the feminine gender."""
    fem_flag = False
    print(f"The noun '{lemmatized}' is feminine.")
    # check the semantic taxonomy
    if hypernyms:
        semantic = fem_rule1(hypernyms)
        if semantic:
            print(
                f"It belongs to the following predominantly feminine semantic categories: {', '.join(semantic)}"
            )
            fem_flag = True
        else:
            print(
                "Grammatical gender assignment could not be determined based on the semantic category."
            )
    elif not hypernyms:
        parsed = de_nouns.parse_compound(lemmatized)
        base = parsed[-1]
        parsed_translation = translator.translate(base, src="de", dest="en")
        translated_base = parsed_translation.text.casefold()
        base_hypernyms = taxonomy(translated_base)  # generate all possible hypernyms
        base_semantic = fem_rule1(base_hypernyms)
        if base_semantic:
            print(
                f"Couldn't find any semantic categories for '{lemmatized}'. The base noun '{base}' belongs to the following predominantly feminine semantic categories: {', '.join(base_semantic)}"
            )
            fem_flag = True
        else:
            print(
                f"Couldn't find any semantic categories for '{lemmatized}'. There are no predomiantly masculine semantic categories to which the base noun '{base}' blelongs."
            )

    # check the morphology
    morphological = fem_rule2(lemmatized)
    if morphological:
        print(f"The noun has the following feminine suffix: {morphological}")
        fem_flag = True
    else:
        print(
            "Grammatical gender assignment cannot be determined based on the noun's morphology."
        )

    # print this if none of the above applies
    if fem_flag == False:
        print(
            f"The grammatical gender of '{lemmatized}' cannot be explained with the available rules."
        )
        print("For better or worse, it has to be memorized")
